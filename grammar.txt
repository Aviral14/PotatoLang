PROG' -> PROG
PROG -> FUNC
PROG -> ''

ST_LIST -> ST ST_LIST
ST_LIST -> ''

ST -> dat TERM_1 ;
TERM_1 -> id 
TERM_1 -> ARR
ST -> id = EXPR ;
ST -> while ( EXPR ) { ST_LIST }
ST -> IF_STMT

IF_STMT -> if ( EXPR ) { ST_LIST } IF_C
IF_C -> IF_B IF_D
IF_B -> elif ( EXPR ) { ST_LIST }
IF_B -> ''
IF_D -> else ( EXPR ) { ST_LIST } 
IF_D -> ''

ST -> for ( EXPR ; EXPR ; EXPR ) { ST_LIST }
ST -> id ( TERM_2 ) ;
TERM_2 -> id
TERM_2 -> LIT
ST -> FUNC
ST -> break

EXPR -> id 
EXPR -> LIT 
EXPR -> ( EXPR op EXPR ) 

LIT -> int 
LIT -> str 
LIT -> flt 
LIT -> boolean

FUNC -> dat id TERM_3
TERM_3 ->  ( ARG_LIST ) { ST_LIST }

ARG_LIST -> ARG ARG_LIST
ARG_LIST -> , ARG_LIST
ARG_LIST -> ''

ARG -> dat TERM_1

ARR -> id [ int ]